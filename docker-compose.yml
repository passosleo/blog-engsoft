version: "3.8"

networks:
  private_network:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

volumes:
  auth_service_db_data:
  post_service_db_data:

services:
  auth_service_db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - auth_service_db_data:/var/lib/postgresql/data
    networks:
      private_network:
        ipv4_address: 172.28.0.2

  auth_service:
    build:
      context: ./auth_service/dist
      dockerfile: Dockerfile
    restart: always
    environment:
      NODE_ENV: ${NODE_ENV}
      HOST: ${HOST}
      PORT: ${PORT}
      NAME: ${NAME}
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
    ports:
      - "3000:3000"
    depends_on:
      - auth_service_db
    networks:
      private_network:
        ipv4_address: 172.28.0.3

  post_service_db:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - post_service_db_data:/var/lib/mysql
    networks:
      private_network:
        ipv4_address: 172.28.0.4

  post_service:
    build:
      context: ./post_service
      dockerfile: Dockerfile
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_APPLICATION_NAME: ${SPRING_APPLICATION_NAME}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      AUTH_API_URL: ${AUTH_API_URL}
    ports:
      - "8080:8080"
    depends_on:
      - post_service_db
    networks:
      private_network:
        ipv4_address: 172.28.0.5

  application:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
        POST_SERVICE_URL: ${POST_SERVICE_URL}
    restart: always
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${FRONTEND_PORT}
    ports:
      - "${FRONTEND_PORT}:8000"
    depends_on:
      - auth_service
      - post_service
    networks:
      private_network:
        ipv4_address: 172.28.0.6
